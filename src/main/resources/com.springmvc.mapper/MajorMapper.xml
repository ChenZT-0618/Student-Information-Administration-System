<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.MajorMapper">
    <resultMap id="BaseResultMap" type="com.springmvc.entity.Major">
        <id column="major_id" property="majorId" jdbcType="VARCHAR"/>
        <result column="college_id" property="majorCollegeId" jdbcType="VARCHAR"/>
        <result column="major_name" property="majorName" jdbcType="VARCHAR"/>
        <result column="major_stu_num" property="majorStuNum" jdbcType="INTEGER"/>
        <result column="major_class_num" property="majorClassNum" jdbcType="INTEGER"/>
        <result column="major_tea_id" property="majorTeaId" jdbcType="VARCHAR"/>
        <result column="major_remark" property="majorRemark" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="MajorWithCollegeResultMap" type="com.springmvc.dto.MajorWithCollegeDto" extends="BaseResultMap">
        <result column="college_name" property="majorCollegeName" jdbcType="VARCHAR"/>
        <result column="major_tea_name" property="majorTeaName" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insertMajor" parameterType="com.springmvc.dto.MajorWithCollegeDto">
        insert into major
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="majorId != null and majorId != ''">
                major_id,
            </if>
            <if test="majorCollegeName != null and majorCollegeName != ''">
                college_id,
            </if>
            <if test="majorName != null and majorName != ''">
                major_name,
            </if>
            -- Mybatis Integer类型判断不要判断空串，不然会把0当成''
            <if test="majorStuNum != null">
                major_stu_num,
            </if>
            <if test="majorClassNum != null">
                major_class_num,
            </if>
            major_tea_id,
            major_remark
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="majorId != null and majorId != ''">
                #{majorId,jdbcType=VARCHAR},
            </if>
            <if test="majorCollegeName != null and majorCollegeName != ''">
                (select college_id from college where college_name=#{majorCollegeName,jdbcType=VARCHAR}),
            </if>
            <if test="majorName != null and majorName != ''">
                #{majorName,jdbcType=VARCHAR},
            </if>
            <if test="majorStuNum != null">
                #{majorStuNum},
            </if>
            <if test="majorClassNum != null">
                #{majorClassNum},
            </if>
            #{majorTeaId,jdbcType=VARCHAR},
            #{majorRemark,jdbcType=VARCHAR}
        </trim>
    </insert>

    <update id="updateStuNumAddOne">
        update major set major_stu_num=major_stu_num+1 where major_id=#{majorId}
    </update>
    <update id="updateStuNumMinusOne">
        update major set major_stu_num=major_stu_num-1 where major_id=#{majorId}
    </update>
    <update id="updateTeaId">
        update major set major_tea_id=#{majorNewTeaId} where major_tea_id=#{majorsOriTeaId}
    </update>
    <update id="updateDeleteTea">
        update major set  major_tea_id=null where major_tea_id=#{majorTeaId}
    </update>
    <update id="updateClassNumAddOne">
        update major set major_class_num=major_class_num+1 where major_id=#{majorId}
    </update>
    <update id="updateClassNumMinusOne">
        update major set major_class_num=major_class_num-1 where major_id=#{majorId}
    </update>
    <update id="updateSetStuNum">
        update major set major_stu_num=#{majorStuNum} where major_id=#{majorId}
    </update>
    <update id="updateInfo">
        update major set major_id=#{majorWCD.majorId}
          ,college_id=(select college_id from college where college_name=#{majorWCD.majorCollegeName})
          ,major_name=#{majorWCD.majorName},major_stu_num=#{majorWCD.majorStuNum},major_class_num=#{majorWCD.majorClassNum}
          ,major_tea_id=#{majorWCD.majorTeaId},major_remark=#{majorWCD.majorRemark}
        where major_id=#{majorOriId}
    </update>
    <delete id="deleteOneMajor">
        delete from major where major_id=#{majorId}
    </delete>

    <select id="findMajorNameByCollege" resultMap="BaseResultMap" parameterType="java.lang.String">
        select m1.* from major m1,college c1
        <where>
            and m1.college_id=c1.college_id
            <if test="collegeName!= null and collegeName!=''">
                and c1.college_name=#{collegeName}
            </if>
        </where>
    </select>

    <select id="queryAllMajorInfo" resultMap="MajorWithCollegeResultMap">
        select table1.*, table2.tea_name as major_tea_name from
        (select m1.*,c1.college_name
        from major m1,college c1 where m1.college_id=c1.college_id) as table1
        left join teacher as table2 on table1.major_tea_id=table2.tea_id
        <where>
            <if test="majorCollegeName !=null and majorCollegeName!=''">
                <bind name="collegeNameLike" value=" '%' + majorCollegeName + '%' "/>
                and table1.college_name like #{collegeNameLike}
            </if>
            <if test="majorName !=null and majorName!=''">
                <bind name="majorNameLike" value=" '%' + majorName + '%' "/>
                and table1.major_name like #{majorNameLike}
            </if>
        </where>
    </select>
    <select id="findStuMajorOwnInfoById" resultMap="MajorWithCollegeResultMap">
        select table1.*, table2.tea_name as major_tea_name from
          (select m1.major_name,c1.college_name,m1.major_stu_num,m1.major_class_num,m1.major_tea_id,m1.major_remark
           from student s1,major m1,college c1 where m1.college_id=c1.college_id
                    and s1.stu_id=#{stuId} and m1.major_id=s1.major_id) as table1
          left join teacher as table2 on table1.major_tea_id=table2.tea_id
    </select>
    <select id="findTeaMajorOwnInfoById" resultMap="MajorWithCollegeResultMap">
      select table1.*, table2.tea_name as major_tea_name from
        (select m1.major_name,c1.college_name,m1.major_stu_num,m1.major_class_num,m1.major_tea_id,m1.major_remark
      from teacher t1,major m1,college c1 where m1.college_id=c1.college_id
        and t1.tea_id=#{teaId} and m1.major_id=t1.major_id) as table1
          left join teacher as table2 on table1.major_tea_id=table2.tea_id
    </select>
    <select id="findIdByMajorName" resultType="string">
        select major_id from major where major_name=#{majorName}
    </select>
    <select id="findMajorById" resultMap="BaseResultMap">
        select * from major where major_id=#{majorId}
    </select>
    <select id="findMajorByName" resultMap="BaseResultMap">
        select * from major where major_name=#{majorName}
    </select>
    <select id="findMajorByTeaId" resultMap="BaseResultMap">
        select * from major where major_tea_id=#{teaId}
    </select>
    <select id="findMaxMajorId" resultType="string">
        SELECT MAX(CAST(major_id AS SIGNED)) FROM major
    </select>
    <select id="findMajorByCollegeId" resultMap="BaseResultMap">
        select * from major where college_id=#{collegeId}
    </select>
</mapper>